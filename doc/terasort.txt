参与排序的MPI进程首先对输入文件进行划分，以确定每个进程计算的文件偏移量和长度，然后通过MPI-IO读取本进程需要排序的部分
每个进程对要处理的数据用qsort进行本地排序，然后收集本进程的最小键值和最大键值，min_key, max_key，通过MPI_Allreduce()调用，每个进程获得全局的最小和最大键值,g_min_key, g_max_key
通过g_min_key和g_max_key，将键值区间[g_min_key, g_max_key]按某种规则划分成N份，其中N是MPI进程总数，生成多个区间，[g_min_key, key1), [key1, key2), ...,[keyN, g_max_key+1), 每个MPI进程按本进程的rank号收集并排序对应区间内的记录。过程如下，每个MPI进程会统计本地的记录在每个区间的分布，通过MPI_Allgather，这样每个进程都会得到一个全局的键值分布图，通过该信息，MPI进程都清楚自己要从哪些MPI进程接收多少数据，以及要向其他哪些节点发送哪些数据。通过MPI_Irecv, 和MPI_Irsend实现数据的收集和分发。
每个进程对收集到的数据，再进行排序，此时可以直接排序，或是用merge排序，此时每个进程内的数据都是有序的，而且整个数据按进程的rank顺序是自然排好的
通过MPI_File_write_ordered将每个进程内排序好的数据写到输出文件